import cosas.*
import camion.*

describe "camion" {
  test "cargas y pesos" {

    camion.cargar(knightRider) //peso 500 peli 10
    camion.cargar(bumblebee) //peso 800 peli 30
    camion.cargar(arenaAGranel) //peso 2 peli 1

    assert.that(camion.todoPesoPar())
    assert.that(camion.hayAlgunoQuePesa(500))
    assert.notThat(camion.hayAlgunoQuePesa(5))
    assert.equals(2302, camion.pesoTotal())
    assert.equals(1302, camion.pesoTotalCarga())
    assert.notThat(camion.excedidoDePeso())

    //agregados
    assert.that(camion.tieneAlgoQuePesaEntre(1, 4))
    assert.equals(bumblebee, camion.cosaMasPesada())
    assert.equals(#{500, 800, 2}, camion.pesos()) //set
  }

  test "cargas y niveles de peligrosidad" {
    
    camion.cargar(knightRider) //peso 500 peli 10
    camion.cargar(bumblebee) //peso 800 peli 30
    camion.cargar(arenaAGranel) //peso 2 peli 1

    assert.equals(bumblebee, camion.elDeNivel(30))
    assert.equals(#{knightRider, bumblebee}, camion.objetosQueSuperanPeligrosidad(7))
    assert.that(camion.superaNivelPeligrosidad(bumblebee, 15))
    assert.equals(#{bumblebee}, camion.objetosMasPeligrososQue(knightRider))
    assert.that(camion.puedeCircularEnRuta(40))
    assert.notThat(camion.puedeCircularEnRuta(20))
  }

  test "cargas y bultos" {
    
    camion.cargar(knightRider) //1 bulto
    camion.cargar(bumblebee) //2 bultos
    camion.cargar(arenaAGranel) //1 bulto

    assert.equals(4, camion.totalBultos())

  }

  test "cambios" {

    camion.cargar(paqueteDeLadrillos)
    camion.cargar(arenaAGranel)

    assert.equals(17, paqueteDeLadrillos.cantidadLadrillos())
    assert.equals(22, arenaAGranel.peso())

  }

}

